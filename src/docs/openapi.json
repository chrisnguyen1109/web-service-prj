{
  "openapi": "3.0.0",
  "info": {
    "title": "REST API Docs",
    "description": "REST API Docs for web-service project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "Current host"
    }
  ],
  "tags": [
    {
      "Facility": {
        "name": "Facility",
        "description": "Facility Management API"
      }
    },
    {
      "User": {
        "name": "User",
        "description": "User Management API"
      }
    },
    {
      "Assignment": {
        "name": "Assignment",
        "description": "Assignment Management API"
      }
    },
    {
      "Auth": {
        "name": "Auth",
        "description": "Authentication Management API"
      }
    }
  ],
  "paths": {
    "/facility": {
      "get": {
        "summary": "Return a list of the facilities",
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "in": "query",
            "name": "address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "address_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the facilities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/facilityRes"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "summary": "Create new facility",
        "tags": [
          "Facility"
        ],
        "security": {
          "BearerAuth": [
            "admin"
          ]
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/facilityBody"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/facilityRes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/facility/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true,
          "description": "The facility ID"
        }
      ],
      "get": {
        "summary": "Return the facility by id",
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "A facility by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/facilityRes"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "summary": "Update the facility by id",
        "tags": [
          "Facility"
        ],
        "security": {
          "BearerAuth": [
            "admin"
          ]
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/facilityBody"
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/facilityRes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "summary": "Remove the facility by id",
        "tags": [
          "Facility"
        ],
        "security": {
          "BearerAuth": [
            "admin"
          ]
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/facilities-within/{distance}/center/lat/{lat}/lng/{lng}": {
      "get": {
        "summary": "Return a list of the facilities within distance",
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "distance",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "The distance"
          },
          {
            "in": "path",
            "name": "lat",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "The latitude"
          },
          {
            "in": "path",
            "name": "lng",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "The longitude"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the facilities within distance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/facilityRes"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/assignment": {
      "get": {
        "summary": "Return a list of the assignments",
        "tags": [
          "Assignment"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "completed"
              ]
            }
          },
          {
            "in": "query",
            "name": "assignmentTime.time",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assignmentTime.date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "assignmentTime.date_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the assignments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/assignmentRes"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "summary": "Create new assignment",
        "tags": [
          "Assignment"
        ],
        "security": {
          "BearerAuth": [
            "admin",
            "doctor",
            "patient"
          ]
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/assignmentBody"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignmentRes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/assignment/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true,
          "description": "The assignment ID"
        }
      ],
      "get": {
        "summary": "Return the assignment by id",
        "tags": [
          "Assignment"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "A assignment by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignmentRes"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "summary": "Update the assignment by id",
        "tags": [
          "Assignment"
        ],
        "security": {
          "BearerAuth": [
            "admin",
            "doctor"
          ]
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/assignmentBody"
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignmentRes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "summary": "Remove the assignment by id",
        "tags": [
          "Assignment"
        ],
        "security": {
          "BearerAuth": [
            "admin",
            "doctor",
            "patient"
          ]
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Return a list of the user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "fullName",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "specialisation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "descriptions",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "doctor",
                "patient"
              ]
            }
          },
          {
            "in": "query",
            "name": "email_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "fullName_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "specialisation_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "descriptions_(gte|gt|lte|lt|ne)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/userRes"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "summary": "Create new user",
        "tags": [
          "User"
        ],
        "security": {
          "BearerAuth": [
            "admin"
          ]
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/userBody"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userRes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/user/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true,
          "description": "The user ID"
        }
      ],
      "get": {
        "summary": "Return the user by id",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "A user by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userRes"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "summary": "Update the user by id",
        "tags": [
          "User"
        ],
        "security": {
          "BearerAuth": [
            "admin"
          ]
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/userBody"
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userRes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "summary": "Remove the user by id",
        "tags": [
          "User"
        ],
        "security": {
          "BearerAuth": [
            "admin"
          ]
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "facilityReq": {
        "type": "object",
        "required": [
          "name",
          "address",
          "location"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point"
                ]
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "image": {
            "type": "string",
            "format": "uri",
            "default": "https:*res.cloudinary.com/chriscloud1109/image/upload/v1651629584/media/default_gr1p4q.jpg"
          }
        },
        "example": {
          "name": "facility 1",
          "address": "Ha Noi",
          "location": {
            "type": "Point",
            "coordinates": [
              105.83416,
              21.027763
            ]
          },
          "image": "https:*res.cloudinary.com/chriscloud1109/image/upload/v1651629584/media/default_gr1p4q.jpg"
        }
      },
      "facilityRes": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point"
                ]
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        },
        "example": {
          "_id": "6275632065deb06b9af8e80b",
          "name": "facility 1",
          "address": "Ha Noi",
          "location": {
            "type": "Point",
            "coordinates": [
              105.83416,
              21.027763
            ]
          },
          "image": "https:*res.cloudinary.com/chriscloud1109/image/upload/v1651629584/media/default_gr1p4q.jpg",
          "createdAt": "2022-05-06T18:04:16.092Z",
          "updatedAt": "2022-05-06T18:04:16.092Z"
        }
      },
      "assignmentReq": {
        "type": "object",
        "required": [
          "patient",
          "doctor",
          "assignmentTime"
        ],
        "properties": {
          "patient": {
            "type": "string",
            "format": "uuid"
          },
          "doctor": {
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed"
            ],
            "default": "pending"
          },
          "assignmentTime": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "patient": "6277ec1d00c9fbcb3a8bb81a",
          "doctor": "6277eef600c9fbcb3a8bb824",
          "notes": "test notes",
          "status": "pending",
          "assignmentTime": {
            "date": "2022-06-13T00:00:00.000Z",
            "time": "13:00"
          }
        }
      },
      "assignmentRes": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "patient": {
            "type": "string",
            "format": "uuid"
          },
          "doctor": {
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed"
            ]
          },
          "assignmentTime": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        },
        "example": {
          "assignmentTime": {
            "date": "2022-06-13T00:00:00.000Z",
            "time": "13:00"
          },
          "_id": "6277effb00c9fbcb3a8bb829",
          "patient": "6277ec1d00c9fbcb3a8bb81a",
          "doctor": "6277eef600c9fbcb3a8bb824",
          "notes": "fwefwewef",
          "status": "pending",
          "createdAt": "2022-05-08T16:29:47.195Z",
          "updatedAt": "2022-05-08T16:29:47.195Z"
        }
      },
      "userReq": {
        "type": "object",
        "required": [
          "fullName",
          "email",
          "password",
          "specialisation",
          "facility"
        ],
        "properties": {
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "phoneNumber": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "default": "https://res.cloudinary.com/chriscloud1109/image/upload/v1651629584/media/default_gr1p4q.jpg"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "patient",
              "doctor"
            ],
            "default": "patient"
          },
          "descriptions": {
            "type": "string",
            "description": "The descriptions must be for `role` is 'doctor' only."
          },
          "specialisation": {
            "type": "string",
            "description": "The specialisation must be for `role` is 'doctor' only."
          },
          "unavailableTime": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "Date"
                },
                "time": {
                  "type": "string"
                }
              }
            },
            "description": "The specialisation must be for `role` is 'doctor' only."
          },
          "facility": {
            "type": "string",
            "format": "uuid",
            "description": "The specialisation must be for `role` is 'doctor' only."
          },
          "healthInfor": {
            "type": "object",
            "properties": {
              "bmiAndBsa": {
                "type": "string"
              },
              "bloodPressure": {
                "type": "string"
              },
              "temprature": {
                "type": "string"
              }
            },
            "description": "The specialisation must be for `role` is 'patient' only."
          }
        },
        "example": {
          "fullName": "Van C",
          "email": "vanc@gmail.com",
          "avatar": "https://res.cloudinary.com/chriscloud1109/image/upload/v1651629584/media/default_gr1p4q.jpg",
          "role": "patient",
          "password": "123456",
          "healthInfor": {
            "bmiAndBsa": "1",
            "bloodPressure": "2",
            "temprature": "3"
          }
        }
      },
      "userRes": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "patient",
              "doctor"
            ]
          },
          "descriptions": {
            "type": "string"
          },
          "specialisation": {
            "type": "string"
          },
          "unavailableTime": {
            "type": "object"
          },
          "facility": {
            "type": "string",
            "format": "uuid"
          },
          "healthInfor": {
            "type": "object",
            "properties": {
              "bmiAndBsa": {
                "type": "string"
              },
              "bloodPressure": {
                "type": "string"
              },
              "temprature": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        },
        "example": {
          "_id": "6279395f041ad2609c7c9d67",
          "fullName": "Van C",
          "email": "vanc@gmail.com",
          "avatar": "https://res.cloudinary.com/chriscloud1109/image/upload/v1651629584/media/default_gr1p4q.jpg",
          "role": "patient",
          "createdAt": "2022-05-09T15:55:11.421Z",
          "updatedAt": "2022-05-11T18:00:00.016Z",
          "healthInfor": {
            "bmiAndBsa": "1",
            "bloodPressure": "2",
            "temprature": "3"
          }
        }
      }
    },
    "requestBodies": {
      "facilityBody": {
        "description": "A request body for Facility",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/facilityReq"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/facilityReq"
            }
          }
        }
      },
      "assignmentBody": {
        "description": "A request body for Assignment",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/assignmentReq"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/assignmentReq"
            }
          }
        }
      },
      "userBody": {
        "description": "A request body for User",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/userReq"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/userReq"
            }
          }
        }
      }
    },
    "parameters": {
      "page": {
        "in": "query",
        "name": "_page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "in": "query",
        "name": "_limit",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 20
        }
      },
      "start": {
        "in": "query",
        "name": "_start",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "expand": {
        "in": "query",
        "name": "_expand",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "in": "query",
        "name": "_fields",
        "schema": {
          "type": "string"
        }
      },
      "end": {
        "in": "query",
        "name": "_end",
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "description": "The _end must be greater than the `_start`."
      },
      "search": {
        "in": "query",
        "name": "_q",
        "schema": {
          "type": "string"
        }
      },
      "sort": {
        "in": "query",
        "name": "_sort",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "No item with this id"
      },
      "UnexpectedError": {
        "description": "Something went wrong"
      },
      "UnauthorizedError": {
        "description": "Invalid token"
      },
      "ValidationError": {
        "description": "Valition error"
      },
      "EmptyResponse": {
        "description": "The resource was deleted"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
